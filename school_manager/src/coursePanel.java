import javax.swing.*;
import java.awt.event.*;
import java.awt.*;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.ListSelectionEvent;
import java.util.ArrayList;
import java.util.Objects;

import java.util.*;
import java.io.*;
import java.io.File;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.Scanner;
import java.util.Random;
import java.sql.*;

public class coursePanel extends JPanel{
    JLabel ID = new JLabel("ID:");
    JLabel courseName = new JLabel("Course Name:");
    JRadioButton academic = new JRadioButton("Academic");
    JRadioButton kap = new JRadioButton("KAP");
    JRadioButton ap = new JRadioButton("AP");
    ButtonGroup bg = new ButtonGroup();

/*
Allows you to add / remove courses and edit their data.
Display
ID (Generated by SQL, not Editable)
Course Name (Editable)
Type (Radio Buttons Academic / AP / KAP), (Editable)
 */

    JTextField ids = new JTextField();
    JTextField course = new JTextField();

    JButton save = new JButton("Save");
    JButton clear = new JButton("Clear");
    JButton saveChanges = new JButton("Save changes");
    JButton deleteContact = new JButton("Delete contact");

    ArrayList<coursesData> storage = new ArrayList<>();
    JList<coursesData> myContacts = new JList<>();

    JScrollPane scrolling = new JScrollPane();
    public coursePanel(int width, int height, Statement sn) throws SQLException{
        setSize(width, height);
        setLayout(null);
        ID.setBounds(280,100,100,50);
        add(ID);
        ids.setText("");
        ids.setBounds(390,120,100,20);
        ids.setEditable(false);
        add(ids);

        setVisible(true);

        courseName.setBounds(280, 150, 100, 20);
        add(courseName);
        course.setText("");
        course.setBounds(390, 150, 100, 20);
        add(course);


        bg.add(academic);
        bg.add(kap);
        bg.add(ap);
        academic.setBounds(280,250,100,20);
        kap.setBounds(280,290,100,20);
        ap.setBounds(280,330,100,20);
        academic.setSelected(false);
        kap.setSelected(false);
        ap.setSelected(false);
        add(academic);
        add(kap);
        add(ap);


        saveChanges.setBounds(280, 380, 100, 20);
        saveChanges.setText("Save Changes");
        saveChanges.setVisible(true);
        add(saveChanges);
        setVisible(true);

        saveChanges.addActionListener(e ->
        {
            coursesData s = myContacts.getSelectedValue();
            int index = storage.indexOf(s);
            int type = -1;
            if(academic.isSelected())
            {
                type = 0;
                academic.setSelected(false);
            }
            if(kap.isSelected())
            {
                type = 1;
                kap.setSelected(false);
            }
            if(ap.isSelected())
            {
                type = 2;
                ap.setSelected(false);
            }
            coursesData temporary = new coursesData(ids.getText(), course.getText(), type);
            storage.set(index, temporary);
            course.setText("");

            myContacts.setListData(storage.toArray(new coursesData[0]));

            try
            {
                sn.executeUpdate("UPDATE course SET title='" + temporary.getCourseName() + "' WHERE id = " + temporary.getID() + ";");
                sn.executeUpdate("UPDATE course SET type = " + temporary.getType() + " WHERE id = " + temporary.getID() + ";");
                //save course
            }
            catch(Exception a)
            {
                a.printStackTrace();
            }
            saveChanges.setVisible(false);
            deleteContact.setVisible(false);

            save.setVisible(true);
            clear.setVisible(true);
            ids.setText(" ");
            ap.setSelected(false);
            System.out.print(ap.isSelected());
            kap.setSelected(false);
            System.out.print(kap.isSelected());
            academic.setSelected(false);
            System.out.print(academic.isSelected());
            repaint();
        });
    }
}
